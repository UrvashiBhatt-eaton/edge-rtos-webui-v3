export const dciMetaData = {
  IP_ADR_ALLO_CNTRL_EIP_OR_DIP_STATUS: {
    id: "14",
    name: "Status of Control of IP Address Allocation Method is from DIP switch or Ethernet",
    description: "Status of Control of IP Address Allocation Method is from DIP switch or Ethernet. \n1= DIP Switch \n2=Ethernet",
    datatype: "uint8",
    enums: { 1: "DIP Switch", 2: "Ethernet", },
    r: 7,
    w: 31,
    length: 1,
    presentWR: 0,
  },
  IP_ADDRESS_ALLOCATION_METHOD_STATUS: {
    id: "15",
    name: "Current Method of IP Allocation",
    description: "Shows the present method used to allocate an IP Address: \n0 - Restore (hardcoded 192.168.1.254). \n1 - DHCP. \n2 - Full address taken from NV Memory. \n3 - Upper three octets from NV and lower octet selected by the dip switch setting.",
    min: 0,
    max: 3,
    datatype: "uint8",
    r: 7,
    w: 31,
    length: 1,
    presentWR: 0,
  },
  IP_ADDRESS_ALLOCATION_METHOD: {
    id: "16",
    name: "Method of IP Allocation",
    description: "Allows to set the method used to allocate an IP Address: \n0 - Restore (hardcoded 192.168.1.254). \n1 - DHCP. \n2 - Full address taken from NV Memory. \n3 - Upper three octets from NV and lower octet selected by the dip switch setting. \n(Critical parameters - Care must be taken while switching to different method)",
    datatype: "uint8",
    enums: { 0: "Statically Hardcoded", 1: "DHCP Allocated", 2: "Taken From NV", 3: "DIP Switch Configured", },
    r: 7,
    w: 31,
    length: 1,
    presentWR: 1,
  },
  ETH_ACD_ENABLE: {
    id: "24",
    name: "ACD Enable",
    description: "Address Conflict Detection enable.  ACD provides protection from duplicate IP addresses on the network.",
    min: 0,
    max: 1,
    datatype: "bool",
    r: 7,
    w: 31,
    length: 1,
    presentWR: 1,
  },
  ETH_ACD_CONFLICT_STATE: {
    id: "25",
    name: "ACD Status",
    description: "Address Conflict Detection State.   \nVal = Description \n0 = No Conflict Detected \n1 = Conflict Detected Defending \n2 = Conflict Detected Retreated",
    datatype: "uint8",
    r: 7,
    w: 31,
    length: 1,
    presentWR: 0,
  },
  ETH_ACD_CONFLICTED_STATE: {
    id: "26",
    name: "ACD Conflicted Status",
    description: "Address Conflict Detection Status.  The state of ACD activity when last conflict was detected. \nVal = Description \n0 = No Conflict \n1 = Probe IPV4 Address \n2 = Ongoing Detection \n3 = Semi-Active Probing",
    datatype: "uint8",
    r: 7,
    w: 31,
    length: 1,
    presentWR: 1,
  },
  ETH_ACD_CONFLICTED_MAC: {
    id: "27",
    name: "ACD Conflicted MAC",
    description: "Address Conflict Detection conflicted device MAC address.  The source MAC address from the header of the received Ethernet packet which was sent by a device reporting a conflict.",
    datatype: "uint8",
    r: 7,
    w: 31,
    length: 6,
    presentWR: 1,
    format: "MAC_ADDRESS()",
  },
  ETH_ACD_CONFLICTED_ARP_PDU: {
    id: "28",
    name: "ACD Conflicted PDU",
    description: "Address Conflict Detection raw ARP PDU when conflict was detected.",
    datatype: "uint8",
    r: 7,
    w: 31,
    length: 28,
    presentWR: 1,
  },
  PRODUCT_SERIAL_NUM: {
    id: "29",
    name: "Serial Number",
    description: "32bit Device Serial Number. (MAE)",
    datatype: "uint32",
    r: 7,
    w: 31,
    length: 4,
    presentWR: 1,
  },
  SIMPLE_APP_CONTROL_WORD: {
    id: "10014",
    name: "Simple App Control word",
    description: "Simple application control word",
    datatype: "uint16",
    r: 7,
    w: 31,
    length: 2,
    presentWR: 1,
    export: 1,
    import: 1,
  },
  SIMPLE_APP_STATUS_WORD: {
    id: "10015",
    name: "Simple App status word",
    description: "Simple application status word",
    datatype: "uint16",
    r: 7,
    w: 31,
    length: 2,
    presentWR: 0,
    export: 1,
    import: 1,
  },
  LTK_VER_ASCII: {
    id: "10016",
    name: "LTK Rev ASCII",
    description: "LTK revision ASCII",
    datatype: "string8",
    r: 7,
    w: 99,
    length: 19,
    presentWR: 0,
  },
  FW_UPGRADE_MODE: {
    id: "10017",
    name: "Firmware Upgrade Mode",
    description: "Firmware Upgrade Mode",
    min: 0,
    max: 2,
    datatype: "uint8",
    enums: { 0: "Upgrade to any version", 1: "Upgrade to same or higher version", 2: "Upgrade not allowed", },
    r: 7,
    w: 99,
    length: 1,
    presentWR: 1,
  },
  USER_WEB_FW_NAME: {
    id: "10024",
    name: "Assigned Name",
    description: "User assigned name",
    datatype: "string8",
    r: 7,
    w: 99,
    length: 32,
    presentWR: 0,
  },
  PRODUCT_PROC_NAME: {
    id: "10025",
    name: "Product Name",
    description: "Product Name",
    datatype: "string8",
    r: 7,
    w: 99,
    length: 32,
    presentWR: 0,
  },
  DEVICE_UP_TIME_SEC: {
    id: "10139",
    name: "Device Up Time",
    description: "Device up time since last reboot(in seconds)",
    units: "Seconds",
    datatype: "uint32",
    r: 7,
    w: 99,
    length: 4,
    presentWR: 0,
  },
  UNIX_EPOCH_TIME_64_BIT: {
    id: "10045",
    name: "Set Time 64bit;Seconds;Microseconds",
    description: "64 bit (32 bit in seconds and 32 bit in microseconds) epoch Time from RTC",
    units: ";S;uS",
    datatype: "uint32",
    r: 7,
    w: 99,
    length: 8,
    presentWR: 1,
  },
  UNIX_EPOCH_TIME: {
    id: "10032",
    name: "Set Time",
    description: "32 bit epoch Time from RTC",
    datatype: "uint32",
    r: 7,
    w: 99,
    length: 4,
    presentWR: 1,
    export: 1,
    import: 1,
  },
  SNTP_SERVICE_ENABLE: {
    id: "10038",
    name: "SNTP Operation Enable",
    description: "SNTP Operation Enable",
    min: 0,
    max: 1,
    datatype: "uint8",
    enums: { 0: "Disable", 1: "Manual Server Entry", },
    r: 7,
    w: 99,
    length: 1,
    presentWR: 1,
  },
  SNTP_ACTIVE_SERVER: {
    id: "10044",
    name: "SNTP Active Server Status",
    description: "SNTP Active Server Status",
    min: 0,
    max: 3,
    datatype: "uint8",
    enums: { 0: "Unconnected", 1: "Connected_To_Server_1", 2: "Connected_To_Server_2", 3: "Connected_To_Server_3", },
    r: 7,
    w: 99,
    length: 1,
    presentWR: 0,
  },
  SNTP_SERVER_1: {
    id: "10039",
    name: "SNTP server 1",
    description: "The SNTP Server 1 IP address or Domain Name",
    datatype: "string8",
    r: 7,
    w: 99,
    length: 40,
    presentWR: 1,
    format: "HOST_ADDRESS()",
  },
  SNTP_SERVER_2: {
    id: "10040",
    name: "SNTP server 2",
    description: "The SNTP Server 2 IP address or Domain Name",
    datatype: "string8",
    r: 7,
    w: 99,
    length: 40,
    presentWR: 1,
    format: "HOST_ADDRESS()",
  },
  SNTP_SERVER_3: {
    id: "10041",
    name: "SNTP server 3",
    description: "The SNTP Server 3 IP address or Domain Name",
    datatype: "string8",
    r: 7,
    w: 99,
    length: 40,
    presentWR: 1,
    format: "HOST_ADDRESS()",
  },
  TIME_OFFSET: {
    id: "10033",
    name: "Timezone",
    description: "Timezone value will be set with offset. E.g GMT+530 value would be -330",
    datatype: "sint16",
    enums: { 660: "GMT-11:00", 600: "GMT-10:00", 540: "GMT-09:00", 480: "GMT-08:00", 420: "GMT-07:00", 360: "GMT-06:00", 300: "GMT-05:00", 270: "GMT-04:30", 240: "GMT-04:00", 210: "GMT-03:30", 180: "GMT-03:00", 120: "GMT-02:00", 60: "GMT-01:00", 0: "GMT/UTC", "-60": "GMT+01:00", "-120": "GMT+02:00", "-180": "GMT+03:00", "-210": "GMT+03:30", "-240": "GMT+04:00", "-300": "GMT+05:00", "-330": "GMT+05:30", "-345": "GMT+05:45", "-360": "GMT+06:00", "-390": "GMT+06:30", "-420": "GMT+07:00", "-480": "GMT+08:00", "-540": "GMT+09:00", "-570": "GMT+09:30", "-600": "GMT+10:00", "-660": "GMT+11:00", "-720": "GMT+12:00", "-780": "GMT+13:00", },
    r: 7,
    w: 99,
    length: 2,
    presentWR: 1,
    export: 1,
    import: 1,
  },
  DATE_FORMAT: {
    id: "10034",
    name: "Date Format",
    description: "Date format values \n0 = mm/dd/yyyy \n1 = dd/mm/yyyy \n2 = yyyy-mm-dd \n3 = dd mm yyyy",
    datatype: "uint8",
    enums: { 0: "mm/dd/yyyy", 1: "dd/mm/yyyy", 2: "yyyy-mm-dd", 3: "dd mm yyyy", },
    r: 7,
    w: 99,
    length: 1,
    presentWR: 1,
    export: 1,
    import: 1,
  },
  TIME_FORMAT: {
    id: "10035",
    name: "Time Format",
    description: "Time format can be \n0 - 12Hrs \n1- 24Hrs",
    datatype: "uint8",
    enums: { 0: "12Hrs (AM/PM)", 1: "24Hrs", },
    r: 7,
    w: 99,
    length: 1,
    presentWR: 1,
    export: 1,
    import: 1,
  },
  REST_RESET_COMMAND: {
    id: "10036",
    name: "Reboot or Reset Device",
    description: "Reboot Device is soft reset, device will be power down and power up. Factory Reset is hard reset, all non-volatile data will be wiped out. Please refresh browser once you save it.",
    datatype: "uint8",
    enums: { 1: "Reboot Device", 2: "Factory Reset", },
    r: 7,
    w: 99,
    length: 1,
    presentWR: 1,
  },
  USER_INACTIVITY_TIMEOUT: {
    id: "10027",
    name: "User account Inactivity timeout",
    description: "User account Inactivity timeout In seconds",
    units: "Seconds",
    min: 900,
    max: 1800,
    datatype: "uint16",
    r: 7,
    w: 99,
    length: 2,
    presentWR: 1,
  },
  MAX_CONCURRENT_SESSION: {
    id: "10079",
    name: "Maximum Concurrent Sessions",
    description: "Maximum number of sessions a user can have.",
    min: 1,
    max: 3,
    datatype: "uint8",
    r: 7,
    w: 99,
    length: 1,
    presentWR: 1,
  },
  ABSOLUTE_TIMEOUT_SEC: {
    id: "10080",
    name: "User Absolute Timeout",
    description: "Maximum time(sec) after which a session will be terminated automatically",
    units: "Seconds",
    min: 1800,
    max: 43200,
    datatype: "uint32",
    r: 7,
    w: 99,
    length: 4,
    presentWR: 1,
  },
  USER_LOCK_TIME_SEC: {
    id: "10081",
    name: "User Lock Time",
    description: "A user will be locked for this period of time(sec) if maximum failed login attempt is achieved",
    units: "Seconds",
    min: 300,
    max: 1800,
    datatype: "uint16",
    r: 7,
    w: 99,
    length: 2,
    presentWR: 1,
  },
  MAX_FAILED_LOGIN_ATTEMPTS: {
    id: "10082",
    name: "Maximum Failed Login Attempts",
    description: "Maimum login attempts a user can have before before account lock",
    min: 3,
    max: 10,
    datatype: "uint16",
    r: 7,
    w: 99,
    length: 2,
    presentWR: 1,
  },
  ACTIVE_IP_ADDRESS: {
    id: "2030",
    name: "Present Ethernet IP Address",
    description: "The active IP address being used on the network.",
    units: "IP",
    datatype: "uint8",
    r: 7,
    w: 31,
    length: 4,
    presentWR: 0,
    format: "IPV4_BIG_ENDIAN_U8()",
  },
  ACTIVE_SUBNET_MASK: {
    id: "2031",
    name: "Present Ethernet Subnet Mask",
    description: "The active subnet mask IP address being used on the network.",
    units: "IP",
    datatype: "uint8",
    r: 7,
    w: 31,
    length: 4,
    presentWR: 0,
    format: "IPV4_BIG_ENDIAN_U8()",
  },
  ACTIVE_DEFAULT_GATEWAY: {
    id: "2032",
    name: "Present Ethernet Default Gateway",
    description: "The active default gateway IP address being used on the network.",
    units: "IP",
    datatype: "uint8",
    r: 7,
    w: 31,
    length: 4,
    presentWR: 0,
    format: "IPV4_BIG_ENDIAN_U8()",
  },
  STATIC_IP_ADDRESS: {
    id: "2033",
    name: "Stored Ethernet IP Address",
    description: "The IP address used in the NV address select configuration.",
    units: "IP",
    datatype: "uint8",
    r: 7,
    w: 31,
    length: 4,
    presentWR: 1,
    format: "IPV4_BIG_ENDIAN_U8()",
  },
  STATIC_SUBNET_MASK: {
    id: "2034",
    name: "Stored Ethernet Subnet Mask",
    description: "The IP subnet mask used in the NV address select configuration.",
    units: "IP",
    datatype: "uint8",
    r: 7,
    w: 31,
    length: 4,
    presentWR: 1,
    format: "IPV4_BIG_ENDIAN_U8()",
  },
  STATIC_DEFAULT_GATEWAY: {
    id: "2035",
    name: "Stored Ethernet Default Gateway",
    description: "The IP default gateway used in the NV address select configuration.",
    units: "IP",
    datatype: "uint8",
    r: 7,
    w: 31,
    length: 4,
    presentWR: 1,
    format: "IPV4_BIG_ENDIAN_U8()",
  },
  MODBUS_TCP_COMM_TIMEOUT: {
    id: "37",
    name: "Modbus TCP Com Timeout",
    description: "Communication timeout for Modbus TCP.  0 = Disable.",
    units: "milliseconds",
    datatype: "uint16",
    r: 7,
    w: 31,
    length: 2,
    presentWR: 1,
  },
  TRUSTED_IP_WHITELIST: {
    id: "10029",
    name: "Trusted IP Address filter white list",
    description: "Enter 3 comma separated IPs or range. \nEg. 192.168.1.25 (Fixed IP), 166.99.170.255 (Range 166.99.170.x) , 172.48.255.255 (Range : 172.48.x.x).  \nWhere \'X\' value range from 1-255.",
    units: "IP",
    datatype: "uint8",
    r: 7,
    w: 99,
    length: 12,
    presentWR: 1,
    format: "IPV4_BIG_ENDIAN_U8()",
  },
  IOT_PROXY_ENABLE: {
    id: "10048",
    name: "Proxy Enable",
    description: "This will be used to use or bypass Proxy server settings (Proxy Enable = 1, Proxy Disable = 0)",
    datatype: "bool",
    r: 7,
    w: 99,
    length: 1,
    presentWR: 1,
  },
  IOT_PROXY_SERVER: {
    id: "10049",
    name: "Proxy Server Address",
    description: "Proxy server address",
    datatype: "string8",
    r: 7,
    w: 99,
    length: 20,
    presentWR: 1,
  },
  IOT_PROXY_PORT: {
    id: "10050",
    name: "Proxy Server Port",
    description: "Proxy server port",
    datatype: "uint16",
    r: 7,
    w: 99,
    length: 2,
    presentWR: 1,
  },
  IOT_PROXY_USERNAME: {
    id: "10051",
    name: "Proxy Username",
    description: "User name used to login in the IOT hub server",
    datatype: "string8",
    r: 7,
    w: 99,
    length: 21,
    presentWR: 1,
  },
  IOT_PROXY_PASSWORD: {
    id: "10052",
    name: "Proxy Password",
    description: "Password used to login in the IOT hub server",
    datatype: "string8",
    r: 7,
    w: 99,
    length: 21,
    presentWR: 1,
    format: "CRED()",
  },
  IOT_DEVICE_GUID: {
    id: "10053",
    name: "Device GUID",
    description: "Device GUID received from PX white",
    datatype: "string8",
    r: 7,
    w: 99,
    length: 37,
    presentWR: 1,
  },
  IOT_CONNECT: {
    id: "10046",
    name: "IOT Enable or Disable",
    description: "Control button to connect or disconnect to IOT(connect = 1, disconnect = 0)",
    datatype: "bool",
    r: 7,
    w: 99,
    length: 1,
    presentWR: 1,
  },
  IOT_STATUS: {
    id: "10047",
    name: "IOT Connection Status",
    description: "Show the current status with the IOT like connected/disconnected(connected = 1, disconnected = 0)",
    datatype: "bool",
    r: 7,
    w: 99,
    length: 1,
    presentWR: 0,
  },
  IOT_CONN_STRING: {
    id: "10055",
    name: "IOT Hub Server Connection string",
    description: "Connection string to access IOT Hub server",
    datatype: "string8",
    r: 7,
    w: 99,
    length: 154,
    presentWR: 1,
    format: "CRED()",
  },
  IOT_CONN_STAT_REASON: {
    id: "10130",
    name: "IOT Connection status reason",
    description: "IOT Connection status reason enums",
    datatype: "uint8",
    enums: { 0: "IoT initial state (default)", 1: "Cloud connected", 2: "IoT disabled", 3: "IoT clock not correctly set", 4: "Reconnecting", 5: "Failed to open connection", 6: "Too many lost messages", 7: "Invalid connection string", 8: "Invalid configuration", 9: "Daily cloud message limit reached", 10: "SAS token expired", 11: "Device disabled by user on IoT hub", 12: "Retry expired", 13: "No network", 14: "Communication error", 15: "Unknown error", 16: "TLS initialization failure", 17: "Ethernet/network interface link down", },
    r: 7,
    w: 99,
    length: 1,
    presentWR: 1,
  },
  MODBUS_TCP_ENABLE: {
    id: "10076",
    name: "Modbus TCP",
    description: "Modbus TCP is an insecure protocol and enabling it can lead to security risk",
    datatype: "bool",
    enums: { 0: "Disable", 1: "Enable", },
    r: 7,
    w: 99,
    length: 1,
    presentWR: 1,
  },
  BACNET_IP_ENABLE: {
    id: "10077",
    name: "Bacnet IP",
    description: "Bacnet IP is an insecure protocol and enabling it can lead to security risk",
    datatype: "bool",
    enums: { 0: "Disable", 1: "Enable", },
    r: 7,
    w: 99,
    length: 1,
    presentWR: 1,
  },
  HTTP_ENABLE: {
    id: "10028",
    name: "HTTP",
    description: "HTTP is an insecure protocol and enabling it can lead to security risk",
    datatype: "bool",
    enums: { 0: "Disable", 1: "Enable", },
    r: 7,
    w: 99,
    length: 1,
    presentWR: 1,
  },
  CORS_TYPE: {
    id: "10083",
    name: "CORS Origin Type",
    description: "0 - request from all origin allowed \n1 - allow request having origin as active IP ",
    datatype: "uint8",
    enums: { 0: "(*) - allows all Origin", 1: "(Active device IP) - allows Origin with device IP", },
    r: 7,
    w: 99,
    length: 1,
    presentWR: 1,
  },
  PRODUCT_CODE: {
    id: "31",
    name: "Product Code",
    description: "Product code numerical",
    datatype: "uint16",
    r: 7,
    w: 31,
    length: 2,
    presentWR: 0,
  },
  PRODUCT_NAME: {
    id: "34",
    name: "Product Name",
    description: "Product Name",
    datatype: "string8",
    r: 7,
    w: 31,
    length: 32,
    presentWR: 0,
  },
  MODEL_NAME: {
    id: "35",
    name: "Model Name",
    description: "Product model name",
    datatype: "string8",
    r: 7,
    w: 31,
    length: 10,
    presentWR: 0,
  },
  USER_APP_NAME: {
    id: "36",
    name: "Assigned Name",
    description: "User assigned name",
    datatype: "string8",
    r: 7,
    w: 31,
    length: 32,
    presentWR: 1,
  },
  LICENSE_INFORMATION: {
    id: "10091",
    name: "Open Source License",
    description: "Open Source License",
    datatype: "string8",
    r: 7,
    w: 99,
    length: 84,
    presentWR: 0,
    format: "HTML_LINK()",
  },
  LOG_PROC_IMAGE_ID: {
    id: "10071",
    name: "Processor and Image",
    description: "Processor and Image ID",
    datatype: "uint8",
    enums: { 0: "Processor Main and Image APPLICATION", 1: "Processor Main and Image WEB", 2: "Processor Main and Image LANGUAGE", },
    r: 7,
    w: 99,
    length: 1,
    presentWR: 1,
  },
  DATA_LOG: {
    id: "10133",
    name: "Data Log",
    description: "Data logging for predefined parameters at fixed interval, change of value or manual trigger",
    datatype: "uint16",
    r: 7,
    w: 99,
    length: 2,
    presentWR: 0,
  },
  EVENT_LOG: {
    id: "10134",
    name: "Event Log",
    description: "Application specific Events Log",
    datatype: "uint16",
    r: 7,
    w: 99,
    length: 2,
    presentWR: 0,
  },
  AUDIT_POWER_LOG: {
    id: "10135",
    name: "Audit-Power Log",
    description: "Audit Log for power and reset",
    datatype: "uint16",
    r: 7,
    w: 99,
    length: 2,
    presentWR: 0,
  },
  AUDIT_FW_UPGRADE_LOG: {
    id: "10136",
    name: "Audit-Fw-Update Log",
    description: "Audit Log for firmware update",
    datatype: "uint16",
    r: 7,
    w: 99,
    length: 2,
    presentWR: 0,
  },
  AUDIT_USER_LOG: {
    id: "10137",
    name: "Audit-User Log",
    description: "Audit Log for user",
    datatype: "uint16",
    r: 7,
    w: 99,
    length: 2,
    presentWR: 0,
  },
  AUDIT_CONFIG_LOG: {
    id: "10138",
    name: "Audit-Config Log",
    description: "Audit Log for configuration",
    datatype: "uint16",
    r: 7,
    w: 99,
    length: 2,
    presentWR: 0,
  },
  NV_MEM_ID: {
    id: "10068",
    name: "NV Memory ID",
    datatype: "uint8",
    enums: { 0: "FRAM", 1: "Undefined", },
    r: 7,
    w: 99,
    length: 1,
    presentWR: 0,
  },
  NV_PARAMETER_ADDRESS: {
    id: "10069",
    name: "NV Parameter Address",
    datatype: "uint32",
    r: 7,
    w: 99,
    length: 4,
    presentWR: 0,
  },
  NV_FAIL_OPERATION: {
    id: "10070",
    name: "NV Operation",
    datatype: "uint8",
    enums: { 0: "Initilization", 1: "Read Parameter", 2: "Read Checksum", 3: "Write Parameter", 4: "Erase Parameter", 5: "Erase All Parameters", },
    r: 7,
    w: 99,
    length: 1,
    presentWR: 0,
  },
  LOGGED_USERNAME: {
    id: "10073",
    name: "Logged user name",
    description: "Logged user name",
    datatype: "string8",
    r: 7,
    w: 99,
    length: 21,
    presentWR: 1,
  },
  LOG_IP_ADDRESS: {
    id: "10074",
    name: "IP Address",
    description: "The IP address of client",
    units: "IP",
    datatype: "uint8",
    r: 7,
    w: 99,
    length: 4,
    presentWR: 1,
    format: "IPV4_BIG_ENDIAN_U8()",
  },
  LOG_PORT_NUMBER: {
    id: "10075",
    name: "Port",
    description: "Port number",
    datatype: "uint8",
    enums: { 0: "Unknown Port Value", 1: "HTTP Port", 2: "HTTPS Port", 3: "MODBUS TCP Port", 4: "BACNET Port", 5: "BLE Port", 6: "Ethernet IP over TCP Port", 7: "Ethernet IP over UDP Port", },
    r: 7,
    w: 99,
    length: 1,
    presentWR: 1,
  },
  RESET_CAUSE: {
    id: "10063",
    name: "Reset Cause",
    description: "Provides the cause of a reset.   \nBit = Description \n0 = Power Up \n1 = Wakeup \n2 = Watchdog \n3 = Software \n4 = Reset Pin \n5 = Brown Out \n6 = Undefined",
    datatype: "byte",
    bitfields: { 0: "Standard power-up", 1: "Wakeup from sleep", 2: "Watchdog reset", 3: "Software - internally", 4: "Microcontroller reset pin", 5: "Brown out reset", 6: "Reset cause undefined", },
    r: 7,
    w: 99,
    length: 1,
    presentWR: 0,
  },
  LOGGING_EVENT_CODE: {
    id: "10064",
    name: "Logging Event",
    datatype: "uint8",
    enums: { 0: "No Event", 1: "Device Restart", 2: "Factory Reset", 3: "Image upgrade started", 4: "Image upgrade complete", 5: "Checksum failure", 6: "Signature verification failure", 7: "Version rollback failure", 8: "NV data restore fail", 9: "NV param write fail", 10: "NV parameter erase fail", 11: "NV erase all parameters fail", 12: "Self user password change", 13: "Other user password change", 14: "User created", 15: "User deleted", 16: "Admin user logged event", 17: "User logged in event", 18: "User logout", 19: "User Locked event", 20: "Reset default admin user", 21: "Reset all user accounts", 22: "Data Log Memory Clear", 23: "Event Log Memory Clear", 24: "Audit-Power Log Memory Clear", 25: "Audit-Fw-Update Log Memory Clear", 26: "Audit-User Log Memory Clear", 27: "Audit-Config Log Memory Clear", 28: "Image upgrade started over IOT", 29: "Image upgrade completed over IOT", 30: "Image upgrade aborted/cancelled over IOT", 31: "Image upgrade failed over IOT due to bad parameter", 32: "Checksum failure over IOT", 33: "Signature verification failure over IOT", 34: "Version rollback failure over IOT", 35: "IOT FUS request rejected on product side", 36: "Memory Integrity Fail - Data Log Memory Clear", 37: "Memory Integrity Fail - Event Log Memory Clear", 38: "Memory Integrity Fail - Audit Power Log Memory Clear", 39: "Memory Integrity Fail - Audit Fw Update Log Memory Clear", 40: "Memory Integrity Fail - Audit User Log Memory Clear", 41: "Memory Integrity Fail - Audit Config Log Memory Clear", 101: "Test event-101", 102: "Test event-102", },
    r: 7,
    w: 99,
    length: 1,
    presentWR: 0,
  },
  DEVICE_STATE: {
    id: "10065",
    name: "Device State",
    datatype: "uint8",
    enums: { 0: "Operational", 1: "Fault", },
    r: 7,
    w: 99,
    length: 1,
    presentWR: 0,
  },
  LANG_PREF_SETTING: {
    id: "10131",
    name: "Preferred Language Setting",
    description: "Preferred Language Setting",
    datatype: "uint8",
    enums: { 0: "Use Device stored language setting", 1: "Use Device stored language setting per user", 2: "Use browser stored language setting", 3: "Use browser local language setting", },
    r: 7,
    w: 99,
    length: 1,
    presentWR: 1,
  },
  COMMON_LANG_PREF: {
    id: "10132",
    name: "Common Language Preferrence",
    description: "Common Language Preferrence according to ISO 639-1",
    datatype: "string8",
    r: 7,
    w: 99,
    length: 6,
    presentWR: 1,
  },
};
